{
  "name": "vscode-electron-build-tools",
  "displayName": "Electron Build Tools",
  "publisher": "dsanders11",
  "description": "A collection of VS Code helpers related to developing the Electron project.",
  "repository": {
    "type": "git",
    "url": "https://github.com/dsanders11/vscode-electron-build-tools.git"
  },
  "license": "MIT",
  "version": "0.0.9",
  "engines": {
    "vscode": "^1.50.0"
  },
  "categories": [
    "Linters",
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:ELECTRON_VERSION",
    "workspaceContains:electron/ELECTRON_VERSION",
    "onDebug",
    "onDebugInitialConfigurations",
    "onView:electron-build-tools"
  ],
  "contributes": {
    "configuration": {
      "title": "Electron Build Tools",
      "properties": {
        "electronBuildTools.build.showTargets": {
          "type": "boolean",
          "default": false,
          "title": "Show Targets",
          "description": "When building, show a list of build targets to choose from."
        },
        "electronBuildTools.build.defaultTarget": {
          "type": "string",
          "description": "Default target to build. Leave blank to use the config default.",
          "enum": [
            "----",
            "breakpad",
            "chromedriver",
            "electron",
            "electron:dist",
            "mksnapshot",
            "node:headers"
          ],
          "default": "----"
        },
        "electronBuildTools.build.ninjaArgs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "title": "Ninja Args",
          "description": "Args to pass to Ninja when building."
        },
        "electronBuildTools.build.buildOptions": {
          "type": "object",
          "properties": {
            "--no-goma": {
              "type": "string",
              "description": "Build without goma.",
              "enum": [
                ""
              ]
            },
            "--gen": {
              "type": "string",
              "description": "Force a re-run of `gn gen` before building.",
              "enum": [
                ""
              ]
            },
            "--target": {
              "type": "string",
              "description": "Forces a specific ninja target.",
              "minLength": 1
            }
          },
          "default": {},
          "title": "Build Options",
          "description": "Options to use when building."
        }
      }
    },
    "languages": [
      {
        "id": "python",
        "filenames": [
          "DEPS"
        ]
      }
    ],
    "problemMatchers": [
      {
        "name": "electron",
        "source": "electron-build-tools",
        "label": "Electron Build Tools",
        "fileLocation": [
          "relative",
          "${command:electron-build-tools.show.outdir}"
        ],
        "applyTo": "allDocuments",
        "pattern": {
          "regexp": "^(.*)\\((\\d+),(\\d+)\\):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "evm.*.json",
        "url": "./schema/evm-config-schema.json"
      },
      {
        "fileMatch": "patches/config.json",
        "url": "./schema/patch-config.json"
      }
    ],
    "debuggers": [
      {
        "type": "electron.cpp.windows",
        "label": "Electron: C++ (Windows)",
        "initialConfigurations": [
          {
            "name": "Electron: C++ (Windows)",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${command:electron-build-tools.show.exe}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${command:electron-build-tools.show.root}\\src",
            "environment": [
              {
                "name": "ELECTRON_ENABLE_LOGGING",
                "value": "true"
              },
              {
                "name": "ELECTRON_ENABLE_STACK_DUMPING",
                "value": "true"
              },
              {
                "name": "ELECTRON_RUN_AS_NODE",
                "value": ""
              }
            ],
            "externalConsole": false,
            "sourceFileMap": {
              "o:\\": "${command:electron-build-tools.show.root}\\src"
            }
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "electron-build-tools.build",
        "title": "Electron Build Tools: Build"
      },
      {
        "command": "electron-build-tools.use-config",
        "title": "Use Config",
        "icon": "$(check)"
      },
      {
        "command": "electron-build-tools.remove-config",
        "title": "Remove Config",
        "icon": "$(trash)"
      },
      {
        "command": "electron-build-tools.sanitize-config",
        "title": "Sanitize Config"
      },
      {
        "command": "electron-build-tools.use-config.quick-pick",
        "title": "Electron Build Tools: Use Config"
      },
      {
        "command": "electron-build-tools.show.goma",
        "title": "Electron Build Tools: Show Goma"
      },
      {
        "command": "electron-build-tools.sync",
        "title": "Electron Build Tools: Sync"
      },
      {
        "command": "electron-build-tools.sync.force",
        "title": "Electron Build Tools: Force Sync"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "electron-build-tools",
          "title": "Electron Build Tools",
          "icon": "images/icon.svg"
        }
      ]
    },
    "views": {
      "electron-build-tools": [
        {
          "id": "electron-build-tools:welcome",
          "name": "Welcome",
          "when": "electron-build-tools:ready && !electron-build-tools:build-tools-installed"
        },
        {
          "id": "electron-build-tools:workspace",
          "name": "Workspace",
          "when": "electron-build-tools:ready && electron-build-tools:build-tools-installed && !electron-build-tools:is-electron-workspace "
        },
        {
          "id": "electron-build-tools:configs",
          "name": "Configs",
          "when": "!electron-build-tools:ready || electron-build-tools:active"
        },
        {
          "id": "electron-build-tools:help",
          "name": "Help and Feedback",
          "visibility": "collapsed"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "electron-build-tools:welcome",
        "contents": "In order to use the Electron Build Tools extension, you need build-tools installed.\nFind out more at the [build-tools repository](https://githbu.com/electron/build-tools)."
      },
      {
        "view": "electron-build-tools:workspace",
        "contents": "An Electron checkout wasn't found in this workspace.\n[Open Folder](command:vscode.openFolder)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "electron-build-tools.build",
          "when": "electron-build-tools:build-tools-installed"
        },
        {
          "command": "electron-build-tools.use-config",
          "when": "false"
        },
        {
          "command": "electron-build-tools.use-config.quick-pick",
          "when": "electron-build-tools:build-tools-installed"
        },
        {
          "command": "electron-build-tools.show.goma",
          "when": "electron-build-tools:build-tools-installed"
        },
        {
          "command": "electron-build-tools.sync",
          "when": "electron-build-tools:build-tools-installed"
        },
        {
          "command": "electron-build-tools.sync.force",
          "when": "electron-build-tools:build-tools-installed"
        },
        {
          "command": "electron-build-tools.remove-config",
          "when": "false"
        },
        {
          "command": "electron-build-tools.sanitize-config",
          "when": "false"
        }
      ],
      "view/item/context": [
        {
          "command": "electron-build-tools.remove-config",
          "when": "view == electron-build-tools:configs && viewItem =~ /^config$/"
        },
        {
          "command": "electron-build-tools.sanitize-config",
          "when": "view == electron-build-tools:configs && viewItem =~ /^active-config$|^config$/"
        },
        {
          "command": "electron-build-tools.use-config",
          "when": "view == electron-build-tools:configs && viewItem =~ /^config$/"
        },
        {
          "command": "electron-build-tools.remove-config",
          "when": "view == electron-build-tools:configs && viewItem =~ /^config$/",
          "group": "inline"
        },
        {
          "command": "electron-build-tools.use-config",
          "when": "view == electron-build-tools:configs && viewItem =~ /^config$/",
          "group": "inline"
        }
      ]
    }
  },
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts && yarn prettier:check",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "prettier:check": "prettier --check \"src/**/*.ts\"",
    "prettier:write": "prettier --write \"src/**/*.ts\""
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "@types/uuid": "^8.3.0",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "eslint": "^7.9.0",
    "glob": "^7.1.6",
    "husky": "^4.3.0",
    "lint-staged": "^10.5.1",
    "mocha": "^8.1.3",
    "prettier": "^2.1.2",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0"
  },
  "dependencies": {
    "chokidar": "^3.4.3",
    "uuid": "^8.3.1"
  },
  "lint-staged": {
    "*.ts": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
